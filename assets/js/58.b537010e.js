(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{336:function(v,_,t){"use strict";t.r(_);var a=t(14),e=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("工程搭建的目的是帮助用户快速搭建属于自己第三方工程的，尤其是"),_("code",[v._v("project Manager")]),v._v("和第三方工具链相关，目前兼容的第三方工具只有xilinx的vivado（后续会继续支持其他三方）。而"),_("code",[v._v("lib Manager")]),v._v("则是为了避免重复造轮子而提供的一个功能，方便用户使用插件提供的一些常见HDL library，也支持用户自己积累library。")]),v._v(" "),_("h2",{attrs:{id:"project-manager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#project-manager"}},[v._v("#")]),v._v(" Project Manager")]),v._v(" "),_("p",[_("code",[v._v("project Manager")]),v._v("的主要目的如下：")]),v._v(" "),_("ol",[_("li",[v._v("抽象出功能，减少其他三方工具的学习成本")]),v._v(" "),_("li",[v._v("抹除版本差异，使得更加专注源码的设计\n"),_("ul",[_("li",[v._v("因为只要有配置文件和设计源就能在任意一个vivado版本下还原工程")])])])]),v._v(" "),_("p",[v._v("注："),_("code",[v._v("project Manager")]),v._v("是强依赖属性配置文件"),_("code",[v._v("property.json")]),v._v("的，如果省缺会直接使用默认(模板)配置")]),v._v(" "),_("p",[v._v("对于PL端的工程管理，我抽象出以下几个功能：")]),v._v(" "),_("ol",[_("li",[v._v("launch ------ 启动整个工程，如果没有工程则创建，有的话则直接打开")]),v._v(" "),_("li",[v._v("refresh ----- 刷新整个工程，更新整个工程的设计")]),v._v(" "),_("li",[v._v("simulate ---- 仿真整个工程，默认不打开GUI界面 "),_("em",[_("code",[v._v("（使用的是TOOL_CHAIN里的仿真器）")])]),v._v(" "),_("ol",[_("li",[v._v("simGUI ----- 仿真成功后打开GUI界面")]),v._v(" "),_("li",[v._v("simCLI ----- 仿真成功后不打开GUI界面")])])]),v._v(" "),_("li",[v._v("build ------- 构建整个工程，并最后输出bit流文件\n"),_("ol",[_("li",[v._v("synth ------ 进行工程的综合")]),v._v(" "),_("li",[v._v("impl ------- 进行工程的实现")]),v._v(" "),_("li",[v._v("bit -------- 输出工程的bit流文件")])])]),v._v(" "),_("li",[v._v("program ----- 比特流文件下载到FPGA/zynq板子中去 "),_("em",[_("code",[v._v("（下载烧写，但不固化）")])])]),v._v(" "),_("li",[v._v("gui --------- 打开工具链的GUI界面\n"),_("ol",[_("li",[v._v("打开GUI后，名为 "),_("em",[_("code",[v._v("HardWare")])]),v._v(" 的终端不建议自行关闭\n"),_("ul",[_("li",[v._v("直接关闭后整个GUI界面会自动关闭，若不保存则可能会导致设计丢失。")]),v._v(" "),_("li",[v._v("直接关闭后插件不会将你的"),_("code",[v._v("IP和bd设计")]),v._v("移动"),_("code",[v._v("Hardware/src/")]),v._v("的同级目录下")])])])])]),v._v(" "),_("li",[v._v("exit -------- 关闭工程，仅在CLI下有效，在打开GUI之后，终端控制权被GUI接管。\n"),_("ol",[_("li",[v._v("在点击"),_("code",[v._v("exit")]),v._v("之后插件会将你的"),_("code",[v._v("IP和bd设计")]),v._v("移动"),_("code",[v._v("Hardware/src/")]),v._v("的同级目录下")]),v._v(" "),_("li",[v._v("如果直接关闭名为 "),_("em",[_("code",[v._v("HardWare")])]),v._v(" 的终端则不会进行"),_("code",[v._v("IP和bd设计")]),v._v("的移动。")]),v._v(" "),_("li",[v._v("注：功能栏 "),_("em",[v._v("TOOL")]),v._v(" 中的 "),_("em",[v._v("Clean")]),v._v(" 时也可以将你的"),_("code",[v._v("IP和bd设计")]),v._v("移动"),_("code",[v._v("Hardware/src/")]),v._v("的同级目录下")])])])]),v._v(" "),_("p",[v._v("除了以上几个显性功能外，还有两个隐性功能分别在"),_("code",[v._v("architecture")]),v._v("栏中，分别为")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("Set as Top")]),v._v(" -------------- 将该文件设置为当前工程的设计顶层模块")]),v._v(" "),_("li",[_("code",[v._v("Set as Testbench Top")]),v._v(" ---- 将该文件设置为当前工程的仿真顶层模块")])]),v._v(" "),_("p",[v._v("特殊地，*"),_("code",[v._v("Zynq")]),v._v("*器件支持PS+PL混合开发，为了应对混合开发的情况，插件给出"),_("code",[v._v("soc")]),v._v("配置如下：")]),v._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"soc"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"core"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"ps7_cortexa9_0"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"bd"')]),v._v("  "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"zynq_default"')]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])]),_("p",[v._v("使用如上配置插件会自动构建一个包含zynq设计的bd工程，帮助用户快速搭建平台。")]),v._v(" "),_("p",[v._v("最后关于设备选型，在"),_("code",[v._v("property.json")]),v._v("文件中的"),_("em",[v._v("Device")]),v._v("属性下配置即可。\n目前已有的如下：")]),v._v(" "),_("ul",[_("li",[v._v("xc7z020clg400-2")]),v._v(" "),_("li",[v._v("xc7a35tftg256-1")]),v._v(" "),_("li",[v._v("xc7a35tcsg324-1")]),v._v(" "),_("li",[v._v("xc7z035ffg676-2")]),v._v(" "),_("li",[v._v("xc7z020clg484-1")])]),v._v(" "),_("p",[v._v("但支持的器件并不仅限于此，理论上可以支持vivado所能支持的所有器件，你可以直接将你的器件直接写在"),_("em",[v._v("device")]),v._v("属性中，此时由于数据库中没有该设备会报警告，但不妨碍运行。如果要消除警告需要将你的器件通过"),_("em",[v._v("FPGA:Add devices to the database")]),v._v("命令将其添加到数据库中。对于不需要的设备也可以通过 "),_("em",[v._v("FPGA:Remove the device from the database")]),v._v(" 将其从数据库中删除。")]),v._v(" "),_("p",[_("strong",[v._v("相关设置")]),v._v(" "),_("code",[v._v("prj.vivado.install.path")]),v._v(" --- vivado的安装路径\n当安装好vivado之后，可以直接在插件内部直接配置vivado的安装路径，也可以将vivado添加到环境变量中去（推荐）。如果路径错误找不到则默认为已经添加到环境变量中去了。\n"),_("em",[v._v("e.g. : D:/APP/vivado_18_3/Vivado/2018.3/bin/")]),v._v("\n注意：在路径中使用斜杠"),_("code",[v._v("/")]),v._v("分隔，并且配置到bin目录下。")]),v._v(" "),_("p",[_("code",[v._v("prj.xilinx.IP.repo.path")]),v._v(" ---- 用户自行设计的xilinx的IP仓库配置该属性后插件会自动将该路径添加到vivado的IP repo中去\n"),_("em",[v._v("e.g. : D:/project/FPGA/.Lib/xIP")])]),v._v(" "),_("p",[_("code",[v._v("prj.xilinx.BD.repo.path")]),v._v(" ----  用户自定义xilinx block design文件的放置路径\n"),_("em",[v._v("e.g. : D:/project/FPGA/.Lib/xbd")])]),v._v(" "),_("h2",{attrs:{id:"lib-manager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#lib-manager"}},[v._v("#")]),v._v(" lib Manager")]),v._v(" "),_("p",[v._v("该插件自带HDL功能库链接功能。\n"),_("code",[v._v("property.json")]),v._v("文件中配置如下：")]),v._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"library"')]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"state"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('""')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// local | remote(default)")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"hardware"')]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"common"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"custom"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n\n"),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"IP_REPO"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"arm"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 包含ip CM3DbgAXI & DAPLink_to_Arty_shield")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"adi"')]),v._v("  "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 包含 adi 公司下所有器件ip，已去除所包含的绝对路径 取自 adi2019_r1")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n")])])]),_("p",[v._v("对于"),_("code",[v._v("property.json")]),v._v("文件中的library属性不建议用户自己配置，建议使用"),_("em",[v._v("import library")]),v._v("命令，或者下图中的图标激活命令进行配置。")]),v._v(" "),_("p",[_("em",[v._v("state")]),v._v(" 属性代表是库文件是加载到本地工作区，还是作为远程进行链接。")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("remote")]),v._v(" 代表从远程虚拟包含（不在工作区下的都被认为远程，而不是网络上的远程）。\n"),_("ul",[_("li",[v._v("远程库文件可以打开并更改 "),_("em",[v._v("("),_("code",[v._v("注：")]),v._v("如果更改之后下次导入就是更改之后的代码)")]),v._v(" 。")])])]),v._v(" "),_("li",[_("code",[v._v("local")]),v._v("  代表将远程文件导入到该工程本地\n"),_("ol",[_("li",[v._v("放置到"),_("code",[v._v("arch.hardware.src")]),v._v("下的lib中，此时更改不会影响远程库中的代码。")]),v._v(" "),_("li",[_("em",[_("code",[v._v("注：")]),v._v("当从local改回remote时lib文件夹会被删除（插件会提醒），请注意")]),v._v("。")])])])]),v._v(" "),_("p",[_("em",[v._v("common")]),v._v(" 属性代表插件自带的HDL功能库，"),_("em",[v._v("该库的代码不太成熟，仅供参考")]),v._v("。\n目前已经经过仿真测试的lib路径如下")]),v._v(" "),_("ul",[_("li",[v._v("Soc")]),v._v(" "),_("li",[v._v("Math/Cordic.v")]),v._v(" "),_("li",[v._v("Math/Sort3.v")]),v._v(" "),_("li",[v._v("Math/Sqrt.v")]),v._v(" "),_("li",[v._v("Malloc/RAM/Shift_RAM")]),v._v(" "),_("li",[v._v("Apply/DSP/Advance/Communicate/Modulate")]),v._v(" "),_("li",[v._v("Apply/DSP/Base/DDS")]),v._v(" "),_("li",[v._v("Apply/Image  (需要包含 Sort3, Sqrt, Shift_RAM)")])]),v._v(" "),_("p",[_("code",[v._v("【注】")]),v._v("：当输入的是文件夹时则包含该文件夹下所有的文件。此外不建议直接更改该库中的代码，更改之后再在下一次插件更新之后会被重新覆盖，请慎重。")]),v._v(" "),_("p",[_("em",[v._v("custom")]),v._v(" 属性代表用户自定义HDL功能库。\n该属性的使用需要对"),_("em",[v._v("setting")]),v._v("下的"),_("em",[v._v("PRJ.customer.Lib.repo.path")]),v._v("进行配置用户自定义库的根目录，并与"),_("em",[v._v("custom")]),v._v("属性下的配置组成文件(夹)的绝对路径。表示如下：\n"),_("em",[_("code",[v._v("PRJ.customer.Lib.repo.path")])]),_("code",[v._v("/")]),_("em",[_("code",[v._v("${custom}")])])]),v._v(" "),_("p",[_("code",[v._v("【注】")]),v._v("：当输入的是文件夹时则包含该文件夹下所有的文件。")]),v._v(" "),_("p",[v._v("最后，对于"),_("code",[v._v("IP_REPO")]),v._v("属性，这是插件向用户提供的两个官方xilinx IP repo，选择自己想要的进行配置，插件会自动添加到vivado的IP repo中去，方便用户直接开发，不用自己去编译导入。")])])}),[],!1,null,null,null);_.default=e.exports}}]);